<fluent:RibbonWindow x:Class="SimpleObjectBrowser.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleObjectBrowser"
        xmlns:fluent="urn:fluent-ribbon"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:xaml="clr-namespace:SimpleObjectBrowser.Xaml"
        mc:Ignorable="d"
        Title="Simple Object Browser" 
        Width="800" 
        Height="600">

    <fluent:RibbonWindow.Resources>
        <BooleanToVisibilityConverter x:Key="bool2Vis" />
        <xaml:LengthConverter x:Key="lengthConverter" />

        <xaml:TreeItemTemplateSelector x:Key="templateSelector">
            <xaml:TreeItemTemplateSelector.AccountTemplate>
                <HierarchicalDataTemplate DataType="vm:AccountViewModel" ItemsSource="{Binding Buckets}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Visibility="{Binding IsBusy, Converter={StaticResource bool2Vis}}" gif:ImageBehavior.AnimatedSource="Assets/loading.gif" />
                        <Image Width="16" Height="16" Source="{Binding Icon}" />
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </xaml:TreeItemTemplateSelector.AccountTemplate>

            <xaml:TreeItemTemplateSelector.BucketTemplate>
                <DataTemplate DataType="vm:BucketViewModel">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="/Assets/bucket.png" />
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </DataTemplate>
            </xaml:TreeItemTemplateSelector.BucketTemplate>
        </xaml:TreeItemTemplateSelector>
    </fluent:RibbonWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <fluent:Ribbon Grid.Row="0">
            <!--Backstage-->
            <!--<fluent:Ribbon.Menu>
                <fluent:Backstage>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>-->

            <!--Tabs-->
            <fluent:RibbonTabItem Header="Home">
                <fluent:RibbonGroupBox Header="Group">
                    <fluent:DropDownButton x:Name="addAccountButton" Header="Add Account"
                           Icon="Assets/add-datasource.png"
                           LargeIcon="Assets/add-datasource.png">
                        <fluent:DropDownButton.Items>
                            <MenuItem x:Name="addBlobStorageMenuItem" Header="Azure _Blob Storage" Click="addBlobStorageMenuItem_Click" />
                            <MenuItem x:Name="addS3MenuItem" Header="AWS _S3" Click="addS3MenuItem_Click" />
                        </fluent:DropDownButton.Items>
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <TreeView ItemsSource="{Binding Accounts}"
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      ItemTemplateSelector="{StaticResource templateSelector}"
                      TreeViewItem.Expanded="TreeView_Expanded">
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{x:Static Colors.Red}" Opacity=".1" />
                    </TreeView.Resources>
                </TreeView>
            </Grid>

            <GridSplitter Grid.Column="1" />

            <Grid Grid.Column="2">
                <ListView x:Name="listView" ItemsSource="{Binding SelectedBucket.Blobs, Mode=OneWay}" MouseDoubleClick="ListView_MouseDoubleClick" >
                    <ListView.View>
                        <GridView>
                            <GridView.Columns>
                                <GridViewColumn Width="30">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Icon}" Width="16" Height="16" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Name"
                              DisplayMemberBinding="{Binding Name}" Width="200" />
                                <GridViewColumn Header="Length"
                              DisplayMemberBinding="{Binding Length, Converter={StaticResource lengthConverter}}"
                              Width="100" />
                                <GridViewColumn Header="Content Type"
                              DisplayMemberBinding="{Binding ContentType}"
                              Width="100" />
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                </ListView>

                <Grid Visibility="{Binding SelectedBucket.IsBusy, Converter={StaticResource bool2Vis}, FallbackValue={x:Static local:App.Collapsed}}" Background="White" Opacity="0.5">
                    <Image HorizontalAlignment="Center" VerticalAlignment="Center"
                       Visibility="{Binding IsBusy, Converter={StaticResource bool2Vis}}"
                       Stretch="None"
                       gif:ImageBehavior.AnimatedSource="Assets/loading.gif" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</fluent:RibbonWindow>
